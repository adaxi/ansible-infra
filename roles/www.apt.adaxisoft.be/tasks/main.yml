-
    name: Creating user repo
    user: name={{ aptly_user }} shell=/bin/false home={{ aptly_home }}
    become: yes
-
    name: Install aptly debian repository
    apt_repository: repo='deb http://repo.aptly.info/ squeeze main' state=present update_cache=yes
    become: yes
-
    name: Import aptly key
    apt_key: id=2A194991 keyserver=keys.gnupg.net state=present
    become: yes
-
    name: Install GPG and nginx
    apt: name={{ item }} state=present update_cache=yes
    with_items:
        - aptly={{ aptly_version }}
        - gnupg
    become: yes
-
    name: Upload repository key
    copy: src="{{ aptly_secret_key_path }}/{{ aptly_secret_key_file }}" dest=/tmp owner={{ aptly_user }} group={{ aptly_user }} mode=0400
    become: yes
-
    name: Import repository key to gnupg
    shell: >
        ( gpg --list-secret-keys | grep -q "{{ aptly_secret_key_id }}" )
        || gpg --allow-secret-key-import --import /tmp/{{ aptly_secret_key_file }}
    become: yes
    become_user: "{{ aptly_user }}"
-
    name: Remove secret key from remote host
    file: path="/tmp/{{ aptly_secret_key_file }}" state=absent
    become: yes
-
    name: Create repositories
    shell: >
        (aptly repo list -raw | grep -q "{{ item.name }}" )
        || (
            aptly repo create \
                --comment "{{ item.comment|default('\"\"') }}" \
                --distribution "{{ item.distribution|default('main') }}" \
                --component "{{ item.component|default('main') }}" \
                "{{ item.name }}"
        )
    become: yes
    become_user: "{{ aptly_user }}"
    with_items: aptly_repositories
    when: aptly_repositories is defined
-
    name: Upload dummy package
    copy: src=dummy_0.1_all.deb dest=/tmp/
    become: yes

-
    name: Import dummy package to repository
    command: aptly repo add {{ item.name }} /tmp/dummy_0.1_all.deb
    become: yes
    become_user: "{{ aptly_user }}"
    with_items: aptly_repositories
    when: aptly_repositories is defined

-
    name: Unpublish repositories
    shell: >
        (aptly publish list | grep -q "{{ item.name }}")
        || aptly publish drop \
            "{{ item.name }}" \
            "{{ item.prefix|default(item.name) }}"
    become: yes
    become_user: "{{ aptly_user }}"
    with_items: aptly_repositories
    when: aptly_repositories is defined

-
    name: Publish repositories
    shell: >
        (aptly publish list | grep -q "{{ item.name }}")
        || aptly publish repo \
            --gpg-key "{{ aptly_secret_key_id }}" \
            --architectures "{{ item.architectures|default('amd64,i386,all') }}" \
            "{{ item.name }}" \
            "{{ item.prefix|default(item.name) }}"
    become: yes
    become_user: "{{ aptly_user }}"
    with_items: aptly_repositories
    when: aptly_repositories is defined

-
    name: Make public key available
    copy: src="{{ aptly_public_key_path }}/{{ aptly_public_key_file }}" dest={{ aptly_home }}/.aptly/public
    become: yes

-
    name: Upload nginx configuration file
    template: src=nginx-aptly.conf.j2 dest=/etc/nginx/sites-available/aptly.conf owner=root group=root mode=644
    notify: restart nginx
    become: yes
-
    name: Creating nginx configuration symlinks
    file: src=/etc/nginx/sites-available/aptly.conf dest=/etc/nginx/sites-enabled/aptly.conf state=link
    notify: restart nginx
    become: yes
